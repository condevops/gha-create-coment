name: 'Create PR comments'
description: 'Split file on chunks and create PR comments'
inputs:
  filename:  # id of input
    description: 'path to file'
    required: true
  title:
    description: ''
    required: false
    default: 'Output'
  chunk-size:
    description: 'Chunk size (chars number)'
    required: false
    default: '32000'
  summary:
    description: 'Expandable block summary'
    required: false
  github-token:
    description: 'GitHub token to authenticate'
    required: true

runs:
  using: "composite"
  steps:
    - name: Create PR
      uses: actions/github-script@v6.4.0
      env:
        FILENAME: .github/terraform/deploy-workflows/output.txt
        TITLE: Terraform output
        SUMMARY: terraform output
      with:
        github-token: ${{inputs.github-token}}
        script: |
          const {readFileSync} = require('fs')

          const title = '${{inputs.title}}'
          const block_summary = '${{inputs.summary}}'
          const str = readFileSync('${{inputs.filename}}', 'utf-8');
          const len = ${{inputs.chunk-size}}
          const size = Math.ceil(str.length/len)
          const chunks = Array(size)
          let offset = 0

          for (let i = 0; i < size; i++) {
            chunks[i] = str.substr(offset, len)
            offset += len
          }

          for (var i = 0; i < chunks.length; i++) {
            block_title = ''
            if (i==0) {
              block_title = `${title} (1 from ${chunks.length}):`
            } else {
              block_title = `Continue output (${i + 1} from ${chunks.length}):`
            }
            comment = block_title + '\n' +
                      '<details>\n' +
                      '<summary>' + block_summary + '</summary>\n\n' +
                      '```\n' + chunks[i] + '\n```\n\n' +
                      '</details>'

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            })
          }
